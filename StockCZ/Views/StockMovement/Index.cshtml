@using StockCZ.Models.Domain;
@model StockCZ.Models.Dto.PurchaseViewModel

<h2>Purchase</h2>

<div class="container border p-3">
    <form asp-action="Purchase" class="row">
        <div class="form-group col-md-6">
            <label asp-for="SelectedStoreId" class="control-label">Select Store:</label>
            <select asp-for="SelectedStoreId" asp-items="new SelectList(Model.Stores, nameof(Store.BaseId), nameof(Store.Name))" class="form-control" onchange="updateItemInfo()">
                <option value="">-- Select Store --</option>
            </select>
            <span asp-validation-for="SelectedStoreId" class="text-danger"></span>
        </div>
        <div class="form-group col-md-6">
            <label asp-for="SelectedItemId" class="control-label">Select Item:</label>
            <select asp-for="SelectedItemId" asp-items="new SelectList(Model.Items, nameof(Item.BaseId), nameof(Item.Name))" class="form-control" onchange="updateItemInfo()" disabled>
                <option value="">-- Select Item --</option>
            </select>
            <span asp-validation-for="SelectedItemId" class="text-danger"></span>
        </div>
        <div class="form-group col-md-6">
            <label asp-for="ItemName" class="control-label">Item Name:</label>
            <input asp-for="ItemName" readonly id="itemName" class="form-control" />
        </div>
        <div class="form-group col-md-6 d-flex align-items-center py-3">
            <label class="control-label ">Quantity in Stock:</label>
            <label id="quantityInStock" class="font-weight-bold"></label>
        </div>
        <div class="form-group col-md-6">
            <label asp-for="Quantity" class="control-label">Quantity to Add:</label>
            <input asp-for="Quantity" class="form-control" disabled
                   type="number" step="1" min="0" pattern="\d+"
                   required
                   oninput="this.setCustomValidity('')" oninvalid="this.setCustomValidity('Please enter a valid non-negative integer.')" />
            <span asp-validation-for="Quantity" class="text-danger"></span>
        </div>

        <div class="form-group col-md-12 py-2">
            <button type="submit" id="purchaseButton" class="btn btn-primary" disabled> Purchase </button>
        </div>
    </form>
</div>
<script>
    function updateItemInfo() {
        var selectedStore = document.getElementById('SelectedStoreId');
        var selectedItem = document.getElementById('SelectedItemId');
        var itemNameInput = document.getElementById('itemName');
        var quantityInStockLabel = document.getElementById('quantityInStock');
        var quantityInput = document.getElementById('Quantity');
        var purchaseButton = document.getElementById('purchaseButton');
        var selectedStoreOption = selectedStore.options[selectedStore.selectedIndex];
        var selectedItemOption = selectedItem.options[selectedItem.selectedIndex];

        itemNameInput.value = selectedItemOption ? selectedItemOption.text : '';

        if (selectedStoreOption && selectedStoreOption.value === '') {
            selectedItem.value = '';
            itemNameInput.value = '';
        }

        if (selectedItemOption && selectedItemOption.value === '') {
            itemNameInput.value = '';
        }

        if (selectedStoreOption && selectedItemOption && selectedItemOption.value !== '') {
            fetch(`/StockMovement/GetQuantityInStock?storeId=${selectedStoreOption.value}&itemId=${selectedItemOption.value}`)
                .then(response => response.json())
                .then(data => {
                    quantityInStockLabel.innerText = data.quantity;
                })
                .catch(error => {
                    console.error('Error fetching quantity:', error);
                });
        } else {
            quantityInStockLabel.innerText = '';
        }
        console.log(selectedStoreOption.value);
        selectedItem.disabled = !selectedStoreOption || selectedStoreOption.value === '';
        quantityInput.disabled = !selectedItemOption || selectedItemOption.value === '';
        purchaseButton.disabled = !(selectedStoreOption.value && selectedItemOption.value !== '' && quantityInput.value !== '');
    }
</script>


